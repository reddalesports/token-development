/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Reddal,
  ReddalInterface,
} from "../../../contracts/ReddalToken.sol/Reddal";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060601b60805234801561001757600080fd5b5060805160601c611ba9610052600039600081816104b1015281816104fa0152818161060d0152818161064d01526106e00152611ba96000f3fe60806040526004361061012a5760003560e01c80635c975abb116100ab5780638da5cb5b1161006f5780638da5cb5b146102f157806395d89b4114610319578063a457c2d71461032e578063a9059cbb1461034e578063dd62ed3e1461036e578063f2fde38b146103b457600080fd5b80635c975abb1461026457806370a082311461027c578063715018a6146102b25780638129fc1c146102c75780638456cb59146102dc57600080fd5b80633659cfe6116100f25780633659cfe6146101e557806339509351146102075780633f4ba83a146102275780634f1ef2861461023c57806352d1902d1461024f57600080fd5b806306fdde031461012f578063095ea7b31461015a57806318160ddd1461018a57806323b872dd146101a9578063313ce567146101c9575b600080fd5b34801561013b57600080fd5b506101446103d4565b6040516101519190611829565b60405180910390f35b34801561016657600080fd5b5061017a6101753660046117cc565b610466565b6040519015158152602001610151565b34801561019657600080fd5b506035545b604051908152602001610151565b3480156101b557600080fd5b5061017a6101c43660046116d4565b610480565b3480156101d557600080fd5b5060405160128152602001610151565b3480156101f157600080fd5b50610205610200366004611688565b6104a6565b005b34801561021357600080fd5b5061017a6102223660046117cc565b61058f565b34801561023357600080fd5b506102056105ce565b61020561024a36600461170f565b610602565b34801561025b57600080fd5b5061019b6106d3565b34801561027057600080fd5b5060655460ff1661017a565b34801561028857600080fd5b5061019b610297366004611688565b6001600160a01b031660009081526033602052604090205490565b3480156102be57600080fd5b50610205610786565b3480156102d357600080fd5b506102056107ba565b3480156102e857600080fd5b506102056108f1565b3480156102fd57600080fd5b506097546040516001600160a01b039091168152602001610151565b34801561032557600080fd5b50610144610923565b34801561033a57600080fd5b5061017a6103493660046117cc565b610932565b34801561035a57600080fd5b5061017a6103693660046117cc565b6109cf565b34801561037a57600080fd5b5061019b6103893660046116a2565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b3480156103c057600080fd5b506102056103cf366004611688565b6109dd565b6060603680546103e390611ac5565b80601f016020809104026020016040519081016040528092919081815260200182805461040f90611ac5565b801561045c5780601f106104315761010080835404028352916020019161045c565b820191906000526020600020905b81548152906001019060200180831161043f57829003601f168201915b5050505050905090565b600033610474818585610a75565b60019150505b92915050565b60003361048e858285610b99565b610499858585610c2b565b60019150505b9392505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156104f85760405162461bcd60e51b81526004016104ef9061185c565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610541600080516020611b2d833981519152546001600160a01b031690565b6001600160a01b0316146105675760405162461bcd60e51b81526004016104ef906118a8565b61057081610e04565b6040805160008082526020820190925261058c91839190610e2e565b50565b3360008181526034602090815260408083206001600160a01b038716845290915281205490919061047490829086906105c9908790611974565b610a75565b6097546001600160a01b031633146105f85760405162461bcd60e51b81526004016104ef906118f4565b610600610fad565b565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561064b5760405162461bcd60e51b81526004016104ef9061185c565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610694600080516020611b2d833981519152546001600160a01b031690565b6001600160a01b0316146106ba5760405162461bcd60e51b81526004016104ef906118a8565b6106c382610e04565b6106cf82826001610e2e565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107735760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016104ef565b50600080516020611b2d83398151915290565b6097546001600160a01b031633146107b05760405162461bcd60e51b81526004016104ef906118f4565b6106006000611040565b600054610100900460ff166107d55760005460ff16156107d9565b303b155b61083c5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016104ef565b600054610100900460ff1615801561085e576000805461ffff19166101011790555b6108a46040518060400160405280600681526020016514995919185b60d21b8152506040518060400160405280600681526020016514915111105360d21b815250611092565b6108ac6110c3565b6108b46110f2565b6108bc611121565b6108dd336108cc6012600a6119cf565b6108d890612710611a7a565b611148565b801561058c576000805461ff001916905550565b6097546001600160a01b0316331461091b5760405162461bcd60e51b81526004016104ef906118f4565b610600611233565b6060603780546103e390611ac5565b3360008181526034602090815260408083206001600160a01b0387168452909152812054909190838110156109b75760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104ef565b6109c48286868403610a75565b506001949350505050565b600033610474818585610c2b565b6097546001600160a01b03163314610a075760405162461bcd60e51b81526004016104ef906118f4565b6001600160a01b038116610a6c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104ef565b61058c81611040565b6001600160a01b038316610ad75760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104ef565b6001600160a01b038216610b385760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104ef565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152603460209081526040808320938616835292905220546000198114610c255781811015610c185760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104ef565b610c258484848403610a75565b50505050565b6001600160a01b038316610c8f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104ef565b6001600160a01b038216610cf15760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104ef565b610cfc8383836112ae565b6001600160a01b03831660009081526033602052604090205481811015610d745760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104ef565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290610dab908490611974565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610df791815260200190565b60405180910390a3610c25565b6097546001600160a01b0316331461058c5760405162461bcd60e51b81526004016104ef906118f4565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610e6657610e61836112f4565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e9f57600080fd5b505afa925050508015610ecf575060408051601f3d908101601f19168201909252610ecc918101906117f5565b60015b610f325760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016104ef565b600080516020611b2d8339815191528114610fa15760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016104ef565b50610e61838383611390565b60655460ff16610ff65760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016104ef565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166110b95760405162461bcd60e51b81526004016104ef90611929565b6106cf82826113b5565b600054610100900460ff166110ea5760405162461bcd60e51b81526004016104ef90611929565b610600611403565b600054610100900460ff166111195760405162461bcd60e51b81526004016104ef90611929565b610600611436565b600054610100900460ff166106005760405162461bcd60e51b81526004016104ef90611929565b6001600160a01b03821661119e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104ef565b6111aa600083836112ae565b80603560008282546111bc9190611974565b90915550506001600160a01b038216600090815260336020526040812080548392906111e9908490611974565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60655460ff16156112795760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016104ef565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586110233390565b60655460ff1615610e615760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016104ef565b6001600160a01b0381163b6113615760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016104ef565b600080516020611b2d83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b61139983611466565b6000825111806113a65750805b15610e6157610c2583836114a6565b600054610100900460ff166113dc5760405162461bcd60e51b81526004016104ef90611929565b81516113ef9060369060208501906115d3565b508051610e619060379060208401906115d3565b600054610100900460ff1661142a5760405162461bcd60e51b81526004016104ef90611929565b6065805460ff19169055565b600054610100900460ff1661145d5760405162461bcd60e51b81526004016104ef90611929565b61060033611040565b61146f816112f4565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b61150e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016104ef565b600080846001600160a01b031684604051611529919061180d565b600060405180830381855af49150503d8060008114611564576040519150601f19603f3d011682016040523d82523d6000602084013e611569565b606091505b50915091506115918282604051806060016040528060278152602001611b4d6027913961159a565b95945050505050565b606083156115a957508161049f565b8251156115b95782518084602001fd5b8160405162461bcd60e51b81526004016104ef9190611829565b8280546115df90611ac5565b90600052602060002090601f0160209004810192826116015760008555611647565b82601f1061161a57805160ff1916838001178555611647565b82800160010185558215611647579182015b8281111561164757825182559160200191906001019061162c565b50611653929150611657565b5090565b5b808211156116535760008155600101611658565b80356001600160a01b038116811461168357600080fd5b919050565b600060208284031215611699578081fd5b61049f8261166c565b600080604083850312156116b4578081fd5b6116bd8361166c565b91506116cb6020840161166c565b90509250929050565b6000806000606084860312156116e8578081fd5b6116f18461166c565b92506116ff6020850161166c565b9150604084013590509250925092565b60008060408385031215611721578182fd5b61172a8361166c565b9150602083013567ffffffffffffffff80821115611746578283fd5b818501915085601f830112611759578283fd5b81358181111561176b5761176b611b16565b604051601f8201601f19908116603f0116810190838211818310171561179357611793611b16565b816040528281528860208487010111156117ab578586fd5b82602086016020830137856020848301015280955050505050509250929050565b600080604083850312156117de578182fd5b6117e78361166c565b946020939093013593505050565b600060208284031215611806578081fd5b5051919050565b6000825161181f818460208701611a99565b9190910192915050565b6020815260008251806020840152611848816040850160208701611a99565b601f01601f19169190910160400192915050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000821982111561198757611987611b00565b500190565b600181815b808511156119c75781600019048211156119ad576119ad611b00565b808516156119ba57918102915b93841c9390800290611991565b509250929050565b600061049f60ff8416836000826119e85750600161047a565b816119f55750600061047a565b8160018114611a0b5760028114611a1557611a31565b600191505061047a565b60ff841115611a2657611a26611b00565b50506001821b61047a565b5060208310610133831016604e8410600b8410161715611a54575081810a61047a565b611a5e838361198c565b8060001904821115611a7257611a72611b00565b029392505050565b6000816000190483118215151615611a9457611a94611b00565b500290565b60005b83811015611ab4578181015183820152602001611a9c565b83811115610c255750506000910152565b600181811c90821680611ad957607f821691505b60208210811415611afa57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122038e4d8154917ef72a66ca6e20d26cc90c0906a928b1a5547511342c3f09ce4ba64736f6c63430008040033";

type ReddalConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReddalConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Reddal__factory extends ContractFactory {
  constructor(...args: ReddalConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Reddal> {
    return super.deploy(overrides || {}) as Promise<Reddal>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Reddal {
    return super.attach(address) as Reddal;
  }
  override connect(signer: Signer): Reddal__factory {
    return super.connect(signer) as Reddal__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReddalInterface {
    return new utils.Interface(_abi) as ReddalInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Reddal {
    return new Contract(address, _abi, signerOrProvider) as Reddal;
  }
}
