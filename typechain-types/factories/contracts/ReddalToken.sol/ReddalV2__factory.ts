/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ReddalV2,
  ReddalV2Interface,
} from "../../../contracts/ReddalToken.sol/ReddalV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060601b60805234801561001757600080fd5b5060805160601c611c1a610052600039600081816104d0015281816105190152818161062c0152818161066c01526106ff0152611c1a6000f3fe6080604052600436106101355760003560e01c80635c975abb116100ab5780638da5cb5b1161006f5780638da5cb5b1461031257806395d89b411461033a578063a457c2d71461034f578063a9059cbb1461036f578063dd62ed3e1461038f578063f2fde38b146103d557610135565b80635c975abb1461029b57806370a08231146102b3578063715018a6146102d35780638129fc1c146102e85780638456cb59146102fd57610135565b80633659cfe6116100fd5780633659cfe6146101f057806339509351146102125780633f4ba83a146102325780634f1ef2861461024757806352d1902d1461025a57806354fd4d501461026f57610135565b806306fdde031461013a578063095ea7b31461016557806318160ddd1461019557806323b872dd146101b4578063313ce567146101d4575b600080fd5b34801561014657600080fd5b5061014f6103f5565b60405161015c9190611871565b60405180910390f35b34801561017157600080fd5b50610185610180366004611814565b610487565b604051901515815260200161015c565b3480156101a157600080fd5b506035545b60405190815260200161015c565b3480156101c057600080fd5b506101856101cf36600461171c565b61049f565b3480156101e057600080fd5b506040516012815260200161015c565b3480156101fc57600080fd5b5061021061020b3660046116d0565b6104c5565b005b34801561021e57600080fd5b5061018561022d366004611814565b6105ae565b34801561023e57600080fd5b506102106105ed565b610210610255366004611757565b610621565b34801561026657600080fd5b506101a66106f2565b34801561027b57600080fd5b5060408051808201909152600381526276322160e81b602082015261014f565b3480156102a757600080fd5b5060655460ff16610185565b3480156102bf57600080fd5b506101a66102ce3660046116d0565b6107a5565b3480156102df57600080fd5b506102106107c4565b3480156102f457600080fd5b506102106107f8565b34801561030957600080fd5b50610210610938565b34801561031e57600080fd5b506097546040516001600160a01b03909116815260200161015c565b34801561034657600080fd5b5061014f61096a565b34801561035b57600080fd5b5061018561036a366004611814565b610979565b34801561037b57600080fd5b5061018561038a366004611814565b610a16565b34801561039b57600080fd5b506101a66103aa3660046116ea565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b3480156103e157600080fd5b506102106103f03660046116d0565b610a24565b60606036805461040490611b36565b80601f016020809104026020016040519081016040528092919081815260200182805461043090611b36565b801561047d5780601f106104525761010080835404028352916020019161047d565b820191906000526020600020905b81548152906001019060200180831161046057829003601f168201915b5050505050905090565b600033610495818585610abc565b5060019392505050565b6000336104ad858285610be0565b6104b8858585610c72565b60019150505b9392505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156105175760405162461bcd60e51b815260040161050e906118a4565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610560600080516020611b9e833981519152546001600160a01b031690565b6001600160a01b0316146105865760405162461bcd60e51b815260040161050e906118f0565b61058f81610e4b565b604080516000808252602082019092526105ab91839190610e75565b50565b3360008181526034602090815260408083206001600160a01b038716845290915281205490919061049590829086906105e89087906119bc565b610abc565b6097546001600160a01b031633146106175760405162461bcd60e51b815260040161050e9061193c565b61061f610ff9565b565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561066a5760405162461bcd60e51b815260040161050e906118a4565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166106b3600080516020611b9e833981519152546001600160a01b031690565b6001600160a01b0316146106d95760405162461bcd60e51b815260040161050e906118f0565b6106e282610e4b565b6106ee82826001610e75565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107925760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000606482015260840161050e565b50600080516020611b9e83398151915290565b6001600160a01b0381166000908152603360205260409020545b919050565b6097546001600160a01b031633146107ee5760405162461bcd60e51b815260040161050e9061193c565b61061f600061108c565b600054610100900460ff166108135760005460ff1615610817565b303b155b61087a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161050e565b600054610100900460ff161580156108a5576000805460ff1961ff0019909116610100171660011790555b6108eb6040518060400160405280600681526020016514995919185b60d21b8152506040518060400160405280600681526020016514915111105360d21b8152506110de565b6108f361110f565b6108fb61113e565b61090361116d565b610924336109136012600a611a1a565b61091f90612710611aeb565b611194565b80156105ab576000805461ff001916905550565b6097546001600160a01b031633146109625760405162461bcd60e51b815260040161050e9061193c565b61061f611280565b60606037805461040490611b36565b3360008181526034602090815260408083206001600160a01b0387168452909152812054909190838110156109fe5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161050e565b610a0b8286868403610abc565b506001949350505050565b600033610495818585610c72565b6097546001600160a01b03163314610a4e5760405162461bcd60e51b815260040161050e9061193c565b6001600160a01b038116610ab35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161050e565b6105ab8161108c565b6001600160a01b038316610b1e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161050e565b6001600160a01b038216610b7f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161050e565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152603460209081526040808320938616835292905220546000198114610c6c5781811015610c5f5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161050e565b610c6c8484848403610abc565b50505050565b6001600160a01b038316610cd65760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161050e565b6001600160a01b038216610d385760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161050e565b610d438383836112fb565b6001600160a01b03831660009081526033602052604090205481811015610dbb5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161050e565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290610df29084906119bc565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e3e91815260200190565b60405180910390a3610c6c565b6097546001600160a01b031633146105ab5760405162461bcd60e51b815260040161050e9061193c565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610ead57610ea883611341565b610ff4565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ee657600080fd5b505afa925050508015610f16575060408051601f3d908101601f19168201909252610f139181019061183d565b60015b610f795760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b606482015260840161050e565b600080516020611b9e8339815191528114610fe85760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b606482015260840161050e565b50610ff48383836113dd565b505050565b60655460ff166110425760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161050e565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166111055760405162461bcd60e51b815260040161050e90611971565b6106ee8282611402565b600054610100900460ff166111365760405162461bcd60e51b815260040161050e90611971565b61061f611450565b600054610100900460ff166111655760405162461bcd60e51b815260040161050e90611971565b61061f611483565b600054610100900460ff1661061f5760405162461bcd60e51b815260040161050e90611971565b6001600160a01b0382166111ea5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161050e565b6111f6600083836112fb565b806035600082825461120891906119bc565b90915550506001600160a01b038216600090815260336020526040812080548392906112359084906119bc565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a36106ee565b60655460ff16156112c65760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161050e565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861106f3390565b60655460ff1615610ea85760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161050e565b6001600160a01b0381163b6113ae5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161050e565b600080516020611b9e83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6113e6836114b3565b6000825111806113f35750805b15610ff457610c6c83836114f3565b600054610100900460ff166114295760405162461bcd60e51b815260040161050e90611971565b815161143c906036906020850190611620565b508051610ff4906037906020840190611620565b600054610100900460ff166114775760405162461bcd60e51b815260040161050e90611971565b6065805460ff19169055565b600054610100900460ff166114aa5760405162461bcd60e51b815260040161050e90611971565b61061f3361108c565b6114bc81611341565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b61155b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161050e565b600080846001600160a01b0316846040516115769190611855565b600060405180830381855af49150503d80600081146115b1576040519150601f19603f3d011682016040523d82523d6000602084013e6115b6565b606091505b50915091506115de8282604051806060016040528060278152602001611bbe602791396115e7565b95945050505050565b606083156115f65750816104be565b8251156116065782518084602001fd5b8160405162461bcd60e51b815260040161050e9190611871565b82805461162c90611b36565b90600052602060002090601f01602090048101928261164e5760008555611694565b82601f1061166757805160ff1916838001178555611694565b82800160010185558215611694579182015b82811115611694578251825591602001919060010190611679565b506116a09291506116a4565b5090565b5b808211156116a057600081556001016116a5565b80356001600160a01b03811681146107bf57600080fd5b6000602082840312156116e1578081fd5b6104be826116b9565b600080604083850312156116fc578081fd5b611705836116b9565b9150611713602084016116b9565b90509250929050565b600080600060608486031215611730578081fd5b611739846116b9565b9250611747602085016116b9565b9150604084013590509250925092565b60008060408385031215611769578182fd5b611772836116b9565b9150602083013567ffffffffffffffff8082111561178e578283fd5b818501915085601f8301126117a1578283fd5b8135818111156117b3576117b3611b87565b604051601f8201601f19908116603f011681019083821181831017156117db576117db611b87565b816040528281528860208487010111156117f3578586fd5b82602086016020830137856020848301015280955050505050509250929050565b60008060408385031215611826578182fd5b61182f836116b9565b946020939093013593505050565b60006020828403121561184e578081fd5b5051919050565b60008251611867818460208701611b0a565b9190910192915050565b6000602082528251806020840152611890816040850160208701611b0a565b601f01601f19169190910160400192915050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600082198211156119cf576119cf611b71565b500190565b80825b60018086116119e65750611a11565b8187048211156119f8576119f8611b71565b80861615611a0557918102915b9490941c9380026119d7565b94509492505050565b60006104be60001960ff851684600082611a36575060016104be565b81611a43575060006104be565b8160018114611a595760028114611a6357611a90565b60019150506104be565b60ff841115611a7457611a74611b71565b6001841b915084821115611a8a57611a8a611b71565b506104be565b5060208310610133831016604e8410600b8410161715611ac3575081810a83811115611abe57611abe611b71565b6104be565b611ad084848460016119d4565b808604821115611ae257611ae2611b71565b02949350505050565b6000816000190483118215151615611b0557611b05611b71565b500290565b60005b83811015611b25578181015183820152602001611b0d565b83811115610c6c5750506000910152565b600281046001821680611b4a57607f821691505b60208210811415611b6b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220e073f546a9ec56874fb12ea225c679d9a0f0fe758148f900b997e9e5a78c5e2364736f6c63430008020033";

type ReddalV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReddalV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReddalV2__factory extends ContractFactory {
  constructor(...args: ReddalV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ReddalV2> {
    return super.deploy(overrides || {}) as Promise<ReddalV2>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ReddalV2 {
    return super.attach(address) as ReddalV2;
  }
  override connect(signer: Signer): ReddalV2__factory {
    return super.connect(signer) as ReddalV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReddalV2Interface {
    return new utils.Interface(_abi) as ReddalV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReddalV2 {
    return new Contract(address, _abi, signerOrProvider) as ReddalV2;
  }
}
