/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ReddalV2,
  ReddalV2Interface,
} from "../../../contracts/ReddalToken.sol/ReddalV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060601b60805234801561001757600080fd5b5060805160601c611be0610052600039600081816104e801528181610531015281816106440152818161068401526107170152611be06000f3fe6080604052600436106101355760003560e01c80635c975abb116100ab5780638da5cb5b1161006f5780638da5cb5b1461032857806395d89b4114610350578063a457c2d714610365578063a9059cbb14610385578063dd62ed3e146103a5578063f2fde38b146103eb57600080fd5b80635c975abb1461029b57806370a08231146102b3578063715018a6146102e95780638129fc1c146102fe5780638456cb591461031357600080fd5b80633659cfe6116100fd5780633659cfe6146101f057806339509351146102125780633f4ba83a146102325780634f1ef2861461024757806352d1902d1461025a57806354fd4d501461026f57600080fd5b806306fdde031461013a578063095ea7b31461016557806318160ddd1461019557806323b872dd146101b4578063313ce567146101d4575b600080fd5b34801561014657600080fd5b5061014f61040b565b60405161015c9190611860565b60405180910390f35b34801561017157600080fd5b50610185610180366004611803565b61049d565b604051901515815260200161015c565b3480156101a157600080fd5b506035545b60405190815260200161015c565b3480156101c057600080fd5b506101856101cf36600461170b565b6104b7565b3480156101e057600080fd5b506040516012815260200161015c565b3480156101fc57600080fd5b5061021061020b3660046116bf565b6104dd565b005b34801561021e57600080fd5b5061018561022d366004611803565b6105c6565b34801561023e57600080fd5b50610210610605565b610210610255366004611746565b610639565b34801561026657600080fd5b506101a661070a565b34801561027b57600080fd5b5060408051808201909152600381526276322160e81b602082015261014f565b3480156102a757600080fd5b5060655460ff16610185565b3480156102bf57600080fd5b506101a66102ce3660046116bf565b6001600160a01b031660009081526033602052604090205490565b3480156102f557600080fd5b506102106107bd565b34801561030a57600080fd5b506102106107f1565b34801561031f57600080fd5b50610210610928565b34801561033457600080fd5b506097546040516001600160a01b03909116815260200161015c565b34801561035c57600080fd5b5061014f61095a565b34801561037157600080fd5b50610185610380366004611803565b610969565b34801561039157600080fd5b506101856103a0366004611803565b610a06565b3480156103b157600080fd5b506101a66103c03660046116d9565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b3480156103f757600080fd5b506102106104063660046116bf565b610a14565b60606036805461041a90611afc565b80601f016020809104026020016040519081016040528092919081815260200182805461044690611afc565b80156104935780601f1061046857610100808354040283529160200191610493565b820191906000526020600020905b81548152906001019060200180831161047657829003601f168201915b5050505050905090565b6000336104ab818585610aac565b60019150505b92915050565b6000336104c5858285610bd0565b6104d0858585610c62565b60019150505b9392505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561052f5760405162461bcd60e51b815260040161052690611893565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610578600080516020611b64833981519152546001600160a01b031690565b6001600160a01b03161461059e5760405162461bcd60e51b8152600401610526906118df565b6105a781610e3b565b604080516000808252602082019092526105c391839190610e65565b50565b3360008181526034602090815260408083206001600160a01b03871684529091528120549091906104ab90829086906106009087906119ab565b610aac565b6097546001600160a01b0316331461062f5760405162461bcd60e51b81526004016105269061192b565b610637610fe4565b565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156106825760405162461bcd60e51b815260040161052690611893565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166106cb600080516020611b64833981519152546001600160a01b031690565b6001600160a01b0316146106f15760405162461bcd60e51b8152600401610526906118df565b6106fa82610e3b565b61070682826001610e65565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107aa5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610526565b50600080516020611b6483398151915290565b6097546001600160a01b031633146107e75760405162461bcd60e51b81526004016105269061192b565b6106376000611077565b600054610100900460ff1661080c5760005460ff1615610810565b303b155b6108735760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610526565b600054610100900460ff16158015610895576000805461ffff19166101011790555b6108db6040518060400160405280600681526020016514995919185b60d21b8152506040518060400160405280600681526020016514915111105360d21b8152506110c9565b6108e36110fa565b6108eb611129565b6108f3611158565b610914336109036012600a611a06565b61090f90612710611ab1565b61117f565b80156105c3576000805461ff001916905550565b6097546001600160a01b031633146109525760405162461bcd60e51b81526004016105269061192b565b61063761126a565b60606037805461041a90611afc565b3360008181526034602090815260408083206001600160a01b0387168452909152812054909190838110156109ee5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610526565b6109fb8286868403610aac565b506001949350505050565b6000336104ab818585610c62565b6097546001600160a01b03163314610a3e5760405162461bcd60e51b81526004016105269061192b565b6001600160a01b038116610aa35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610526565b6105c381611077565b6001600160a01b038316610b0e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610526565b6001600160a01b038216610b6f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610526565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152603460209081526040808320938616835292905220546000198114610c5c5781811015610c4f5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610526565b610c5c8484848403610aac565b50505050565b6001600160a01b038316610cc65760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610526565b6001600160a01b038216610d285760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610526565b610d338383836112e5565b6001600160a01b03831660009081526033602052604090205481811015610dab5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610526565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290610de29084906119ab565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e2e91815260200190565b60405180910390a3610c5c565b6097546001600160a01b031633146105c35760405162461bcd60e51b81526004016105269061192b565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610e9d57610e988361132b565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ed657600080fd5b505afa925050508015610f06575060408051601f3d908101601f19168201909252610f039181019061182c565b60015b610f695760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610526565b600080516020611b648339815191528114610fd85760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610526565b50610e988383836113c7565b60655460ff1661102d5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610526565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166110f05760405162461bcd60e51b815260040161052690611960565b61070682826113ec565b600054610100900460ff166111215760405162461bcd60e51b815260040161052690611960565b61063761143a565b600054610100900460ff166111505760405162461bcd60e51b815260040161052690611960565b61063761146d565b600054610100900460ff166106375760405162461bcd60e51b815260040161052690611960565b6001600160a01b0382166111d55760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610526565b6111e1600083836112e5565b80603560008282546111f391906119ab565b90915550506001600160a01b038216600090815260336020526040812080548392906112209084906119ab565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60655460ff16156112b05760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610526565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861105a3390565b60655460ff1615610e985760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610526565b6001600160a01b0381163b6113985760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610526565b600080516020611b6483398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6113d08361149d565b6000825111806113dd5750805b15610e9857610c5c83836114dd565b600054610100900460ff166114135760405162461bcd60e51b815260040161052690611960565b815161142690603690602085019061160a565b508051610e9890603790602084019061160a565b600054610100900460ff166114615760405162461bcd60e51b815260040161052690611960565b6065805460ff19169055565b600054610100900460ff166114945760405162461bcd60e51b815260040161052690611960565b61063733611077565b6114a68161132b565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b6115455760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610526565b600080846001600160a01b0316846040516115609190611844565b600060405180830381855af49150503d806000811461159b576040519150601f19603f3d011682016040523d82523d6000602084013e6115a0565b606091505b50915091506115c88282604051806060016040528060278152602001611b84602791396115d1565b95945050505050565b606083156115e05750816104d6565b8251156115f05782518084602001fd5b8160405162461bcd60e51b81526004016105269190611860565b82805461161690611afc565b90600052602060002090601f016020900481019282611638576000855561167e565b82601f1061165157805160ff191683800117855561167e565b8280016001018555821561167e579182015b8281111561167e578251825591602001919060010190611663565b5061168a92915061168e565b5090565b5b8082111561168a576000815560010161168f565b80356001600160a01b03811681146116ba57600080fd5b919050565b6000602082840312156116d0578081fd5b6104d6826116a3565b600080604083850312156116eb578081fd5b6116f4836116a3565b9150611702602084016116a3565b90509250929050565b60008060006060848603121561171f578081fd5b611728846116a3565b9250611736602085016116a3565b9150604084013590509250925092565b60008060408385031215611758578182fd5b611761836116a3565b9150602083013567ffffffffffffffff8082111561177d578283fd5b818501915085601f830112611790578283fd5b8135818111156117a2576117a2611b4d565b604051601f8201601f19908116603f011681019083821181831017156117ca576117ca611b4d565b816040528281528860208487010111156117e2578586fd5b82602086016020830137856020848301015280955050505050509250929050565b60008060408385031215611815578182fd5b61181e836116a3565b946020939093013593505050565b60006020828403121561183d578081fd5b5051919050565b60008251611856818460208701611ad0565b9190910192915050565b602081526000825180602084015261187f816040850160208701611ad0565b601f01601f19169190910160400192915050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600082198211156119be576119be611b37565b500190565b600181815b808511156119fe5781600019048211156119e4576119e4611b37565b808516156119f157918102915b93841c93908002906119c8565b509250929050565b60006104d660ff841683600082611a1f575060016104b1565b81611a2c575060006104b1565b8160018114611a425760028114611a4c57611a68565b60019150506104b1565b60ff841115611a5d57611a5d611b37565b50506001821b6104b1565b5060208310610133831016604e8410600b8410161715611a8b575081810a6104b1565b611a9583836119c3565b8060001904821115611aa957611aa9611b37565b029392505050565b6000816000190483118215151615611acb57611acb611b37565b500290565b60005b83811015611aeb578181015183820152602001611ad3565b83811115610c5c5750506000910152565b600181811c90821680611b1057607f821691505b60208210811415611b3157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122084e4a732dd25be783e2f1b992dae8ce4f4fec1d79b099c0ad0a946eefc67db9f64736f6c63430008040033";

type ReddalV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReddalV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReddalV2__factory extends ContractFactory {
  constructor(...args: ReddalV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ReddalV2> {
    return super.deploy(overrides || {}) as Promise<ReddalV2>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ReddalV2 {
    return super.attach(address) as ReddalV2;
  }
  override connect(signer: Signer): ReddalV2__factory {
    return super.connect(signer) as ReddalV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReddalV2Interface {
    return new utils.Interface(_abi) as ReddalV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReddalV2 {
    return new Contract(address, _abi, signerOrProvider) as ReddalV2;
  }
}
